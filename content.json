{"meta":{"title":"春风十里鸭的技术小屋","subtitle":null,"description":"欢迎来到春风十里鸭的技术小屋","author":"Ding wei","url":"http://example.com","root":"/"},"pages":[{"title":"分类","date":"2022-06-10T08:58:50.000Z","updated":"2022-06-10T08:59:26.377Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-06-10T09:00:05.000Z","updated":"2022-06-10T09:00:38.497Z","comments":true,"path":"link/index.html","permalink":"http://example.com/link/index.html","excerpt":"","text":""},{"title":"tags","date":"2022-06-10T08:57:27.000Z","updated":"2022-06-10T08:58:04.382Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"python实现自动化处理txt文件（提取最后一行数据以及将txt转成excel）","slug":"保姆级教程python实现自动化处理txt文件（提取最后一行数据以及将txt转成excel）-1","date":"2022-06-10T10:35:04.000Z","updated":"2022-06-10T10:39:06.040Z","comments":true,"path":"2022/06/10/保姆级教程python实现自动化处理txt文件（提取最后一行数据以及将txt转成excel）-1/","link":"","permalink":"http://example.com/2022/06/10/%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8Bpython%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E5%A4%84%E7%90%86txt%E6%96%87%E4%BB%B6%EF%BC%88%E6%8F%90%E5%8F%96%E6%9C%80%E5%90%8E%E4%B8%80%E8%A1%8C%E6%95%B0%E6%8D%AE%E4%BB%A5%E5%8F%8A%E5%B0%86txt%E8%BD%AC%E6%88%90excel%EF%BC%89-1/","excerpt":"","text":"由于老师需要处理大量数据，所以想着用python写一个自动化处理的数据的代码，经过一会儿尝试，实现了我处理数据需求。 以下是txt转成excel操作过程中可能碰到的问题。 注意空格，因为python本身没有{ }用来对齐，因此空格不要乱调，不然影响语句逻辑关系 处理数据时，修改dir那里的地址，改成你要处理的文件夹地址，这里注意语言本身可能不识别转义字符 然后就是list.replace(‘.txt’,’.xlsx’)，这里是将文件转名字用的，所以要看好需要处理文件的格式，填错了将无法识别文件 其他的就是注意符号的中英文 配置好python环境后，下载包 xlsxwriter，否则会报错，以后调其他的py包也一样，百度一下调报的代码，cmd中输入 这里的命令是 （tips：导入包时因为有些地址是国外的，速度比较慢，可以百度看看国内的版本，如我附的这个） pip3 install xlsxwriter -i https://pypi.douban.com/simple 代码如下：（只需要改一下dir路径名就可以） import xlsxwriterimport osdir = &quot;C:/Users/10092/Desktop/1&quot; #绝对路径lists = os.listdir(dir) #获取目录下的所有文件名for list in lists: #遍历文件名 txt_dir = os.path.join(dir,list) #每个txt文件的路径 f = open(txt_dir,&#x27;r&#x27;) contexts = f.readlines() # 获取txt文件内容 sheet_name = list.replace(&#x27;.log&#x27;,&#x27;.xlsx&#x27;) #excel文件取名 file = xlsxwriter.Workbook(sheet_name) #创建excl sheet = file.add_worksheet() #创建工作表 i = 0 #excel表格中的第一行 for context in contexts: context = context.strip(&#x27;\\n&#x27;) context = context.split(&#x27;,&#x27;) #通过指定分隔符(,)对字符串进行切片 sheet.write_column(i, 0, context) #第i行，第0列（在工作表中写入文本内容） i += 1 file.close() 实现提取text最后一行数据的代码：（注意点在代码下面） import os path = &#x27;C:/Users/10092/Desktop/4&#x27;#绝对路径path_list = os.listdir(path)#这里选择处理包的路径path_list.sort(key=lambda x:int(x[14:-4]))# 检查获得的文件名是否按顺序排列：print(path_list)f = open(&quot;result.txt&quot;, &quot;w&quot;)#逐个打开文件for filename in path_list: fe = open(os.path.join(path,filename),&#x27;r&#x27;) lines = fe.readlines() last_line=lines[-1] f.write(last_line) #print(last_line) #创建一个名为“ result.txt”的文件： 使用说明：（1）上面执行后，得到的是txt文件，再用一下之前转excel代码（将result.txt文件放到一个包，然后注意改一下路径，改成你放的包的路径）这里得到的是倒序的（跟包里文件相反）（2）自己在excel第一列插入一列新的列，标上1,2,3…，然后ctrl+A全选，选择排序，自定义排序，按A倒序（3）然后选择B列，点击数据，选择分列，选分隔符号，下一步，选空格，完成（4）然后将数据放到你的表格中","categories":[],"tags":[]},{"title":"第一篇","slug":"第一篇","date":"2022-06-09T08:13:33.000Z","updated":"2022-06-09T08:13:33.337Z","comments":true,"path":"2022/06/09/第一篇/","link":"","permalink":"http://example.com/2022/06/09/%E7%AC%AC%E4%B8%80%E7%AF%87/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-06-09T08:06:41.397Z","updated":"1985-10-26T08:15:00.000Z","comments":true,"path":"2022/06/09/hello-world/","link":"","permalink":"http://example.com/2022/06/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}